class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        int count = 0, i = 0;
        
        if (flowerbed.size() == 0 || n < 0)
        {
            return false;
        }
        
        if (flowerbed.size() == 1 && flowerbed.at(i) == 0)
        {
            count = 1;
            flowerbed.at(i) == 1;
        }
        
        for (i = 0; i < flowerbed.size(); i++)
        {
            if (flowerbed.at(i) == 0 && flowerbed.size() > 1)
            {
                if (i == 0 && flowerbed.at(i+1) == 0)
                {
                    count++;
                    flowerbed.at(i) = 1;
                } else if (i == flowerbed.size() - 1 && flowerbed.at(i-1) == 0) {
                    count++;
                    flowerbed.at(i) = 1;               
                }
            
                if (i > 0 && i < flowerbed.size() - 1 &&
                    flowerbed.at(i-1) == 0 && flowerbed.at(i+1) == 0)
                {
                    count++;
                    flowerbed.at(i) = 1;
                }
            }
        } // end of for loop
        
        if (n <= count)
        {
            return true;
        }
        
        return false;
    } // end of function
};
