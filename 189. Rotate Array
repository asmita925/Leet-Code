class Solution {
public:
    
    void reverseArray(vector<int>& nums, int low, int high)
    {
        int temp = 0;
        int mid = (high-low)/2, i = 0;
        
        for (i = 0; i <= mid; i++)
        {
            temp = nums.at(low+i);
            nums.at(low+i) = nums.at(high-i);
            nums.at(high-i) = temp;
        }
    }
    
    void rotate(vector<int>& nums, int k) {
        if (nums.size() <= 1 || k < 1 || k == nums.size())
        {
            // when k = nums.size(), no need to rotate. You get the same array as input
            //when nums size is 1, nothing to rotate, simply return
            return;
        }
        
        // In case, k is greater than array size, save one whole rotation of size = nums.size()
        k %= nums.size();
        
        if (k > 0)
        {
            reverseArray(nums, 0, nums.size()-1);
            reverseArray(nums, 0, k-1);
            reverseArray(nums, k, nums.size()-1);
        }
    } // end of func
};
