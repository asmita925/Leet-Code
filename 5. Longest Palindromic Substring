class Solution {
public:
    string longestPalindrome(string s)
    {
        int i = 0, n = s.length(), len = 0, lenEven = 0, lenOdd = 0;
        int start = 0, end = 0;
        
        for (i = 0; i < n; i++)
        {
            lenOdd = expandAroundCenter(s, i, i);
            lenEven = expandAroundCenter(s, i, i+1);
            
            len = max(lenOdd, lenEven);
            
            if (len > end - start)
            {
                start = i - ((len-1)/2);
                end = i + len/2;
            }
        }
        
        return s.substr(start, end-start+1);
    }
    
    int expandAroundCenter(string s, int left, int right) {
        int l = left, r = right;
        
        while (l >= 0 && r < s.length() && (s.at(l) == s.at(r)))
        {
            l--;
            r++;
        }
               
        return r-l-1;
    }
};

